name: Unit and Integration Tests
on: ["pull_request"]
jobs:
  linter:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10.8"]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-test.txt
      - name: Lint
        run: pre-commit run --all-files
  test-postgres:
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    #container: joshjamison/python38:latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, 3.10.8]

    services:
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        # Provide the password for postgres
        ports:
          - 6379:6379
      postgres:
        # Docker Hub image
        image: postgres
        command: postgres -c 'max_connections=250'
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: database
        ports:
          - 5432:5432

        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements-test.txt; fi

      - name: Run Tests - postgres
        run: |
          export ENV=postgres
          make test
          make test-migrations
  test-mysql:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    #container: joshjamison/python38:latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        # Provide the password for postgres
        ports:
          - 6379:6379
      mysql:
        # Docker Hub image
        image: mysql
        # Provide the password for postgres
        env:
          MYSQL_USER: mysqltestuser
          MYSQL_PASSWORD: abcd1234
          MYSQL_ROOT_PASSWORD: abcd1234
          MYSQL_DATABASE: database
        ports:
          - 3306:3306
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements-test.txt; fi
      - name: Run Tests - mysql
        run: |
          export ENV=mysql
          make test
          make test-migrations

  # Label of the container job
  test-sqlite:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    #container: joshjamison/python38:latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, 3.10.8]

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        # Provide the password for postgres
        ports:
          - 6379:6379
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements-test.txt; fi
      - name: Run Tests - Sqlite
        run: |
          export ENV=sqlite
          make test
          make test-migrations
